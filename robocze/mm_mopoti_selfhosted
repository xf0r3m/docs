#SelfHosted
My Own Place On The Internet.
A więc, sam to hostujesz ?
Dokładnie 14.02 zrezygnowałem z #SelfCreated usług. Fakt że pisałem je od zera, praktycznie nie mając żadnej wiedzy czy też doświadczenia w tworzeniu nowoczesnych aplikacji miały one mizerny skutek... Pod względem behawioralnym jak UI czy UX. Jeśli nie potrafiłem zaimplementować jakejś funkcji to starałem się iść na kompromis, stworzyć jej tak jakby imitacje taką która była dla mnie osiągalna, irytowało mnie to w opór. Przez takie rzeczy najczęściej wrzucałem to na repozytorium i o tym zapominałem, nawet jej nie używałem. Zostawiałem wysryw na kartce i tą obsraną kartę chowałem do szuflady, bo ich tyle że aż szufla zgniła i się rozleciała. Tak, repozytorium też wylądowało w piecu. Miało być imitacją SVN bo byłem zbyt leniwy żeby nauczyć się tej technologii i dowiedzieć się że sam Apache ją hostuje...
No nic, najwyraźniej w tego roczne walentyki, przemianuje na to totalne jej przeciwieństwo. Zakochując się w kimś raczej ten rozum tracimy, do momentu pierszej przykrej rzeczy jaką nam ta osoba wyrządzi. Trust me i'm expert. Ja poszedłem po rozum do głowy. Zdjąłem wszystkie moje usługi. Ostatnie dwie rzeczy wyglądały tak fatalnie, że nie mogłem na nie patrzeć, chociaż spełniały swoje zadanie. Właśnie z moimi rzeczami było tak że zawsze spełniały swoją rolę, posiadały wiele funkcji, których w ogóle nie użyłem. Ja to nie github, który jest pełen nie udokumentowanego lub fatalnie udokumentowanego gówna. Przeważnie nie działającego. Sam się dziwie, że te projekty mają jakiekolwiek uwagi/problemy. Chyba po kilku wymianach wiadomości na priv z twórcą udało się to uruchomić. Dlaczego nie wrzucałem swoich projektów na github ? Bo było i jest i pewnie będzie ogromnie wstyd. Dlatego że np. komuś coś nie zadziała.
Ten wstęp i tak już jest za długi...
Po zredefiniowaniu swoich poglądów. Tylko krowa ich nie zmienia. Do tej pory korzystałem z dwóch. Gdzie na jednej z nich hostowałem swoje wysrywy. Nextcloud. Z NC jestem bardzo zadowolny. Gdyby nie jeden fakt, o którym tu nie wspomnę. Będzie osobny wpis odnośnie chmur plikowych. Gdzie pojawi się zestawienie najpopularniejszych serwisów selfhosted. Dzięki NextCloud miałem łatwy dostęp do plików swoich aplikcji czy też stron, po odpowiednim skonfigurowaniu plików hostingu Apache (wskazaniu folderu strony jako jeden z folder w katalogu danych NextCloud i ustawieniu odpowiednich uprawnień co do lokalizacji folderu strony), mogłem umieszczać najnowsze numery Linux Magazine (oczywiście zaszyfrowane) czy jakiś notatki jak coś skonfigurować właśnie za pomocą NextCloud. Korzystałem głównie z panelu WWW, ponieważ nagle na NC zrobiło się 147 GB. Niestety mam małe dyski... Jednak jest szczególny przypadek kiedy przydaję się klient Nextcloud. Może sposób trochę na około, ale działa. Jeśli musimy tworzyć jakieś pliki zdalnie na serwerze, np. piszemy jakąś stronę internetową, albo apkę w PHP lub Node.js. To koniec końców musimy przenieść pliki na serwer. A co jeśli przed rozpoczęciem prac deweloperskich zainstalujemy sobie NextCloud, domyślnie w katalogu /var/www/html, i powiedzmy że katalog danych damy na /var/www/html/data. Co jest trochę risky! Ale jeśli już musimy pracować z internetu. To trzeba, stworzyć wirtualny hosting dla naszej aplikacji i NextCloud, umieszczając folder naszej aplikacji w katalogu danych NC będziemy mogli synchronizować katalog lokalny na naszym komputerze z katalogiem zdalnym na serwerze. Pod czas pracy jeśli klikniemy ctrl/cmd + s, nie tylko zapiszemy nasze dane na dysku ale także dane na serwerze zostaną z synchronizowane. Sama instalacja NC, nie wymaga dużego wysiłku i zajmuje 5 min, oczywiśnie nie licząc czasu na ściągniecie archiwum z plikami aplikacji. Raz miałem taki przypadek, że chyba był jakiś problem z hostingiem plików NC, transfer rzędu 200 Kb/s. Po jakimś czasie, problem już nie występował. Od czasu tego problemu, na swoim NC mam pliki NC do instalacji. Nawet dość aktualne. Nextcloud oparty jest na PHP i instaluje się go jak np. Wordpress.
Drugą aplikacją był RocketChat. Ciche i spokojne miejsce gdzie można było siebie porozmawiać. RC jest oparte na Node.js, jego instalacja też nie jest turbo trudna. Jedna rzecz może być problematyczna, otóż Node.js natywanie nadaje na portcie TCP/3000 i teraz że by mieć bezpieczne połącznie szyfrowane potrzebny byłby port TCP/443. Potrzebujemy proxy, i takie proxy jesteśmy w stanie załatwić Apache, w moim przypadku był to kolejny plik z wirtualnym hostingiem. Prawdopodbnie nigdy bym go nie uruchomił, ale potrzebowałem funkcjonalnego kanału komunikacji dla celów projektu. Obecnie zastanawiam się nad jego wyłączeniem. W Dodatku dla tego artykułu wrzuce plik konfiguracyjny. Powinien działać ze wszystkimi aplikacjmi opartymi o Node.js, chodzi głównie tu o linie dotyczące proxy.
Ostatnią rzeczą, krem de la krem będzie... Uwaga! Uwaga!  Platforma sandstorm.io. Jest to platforma która umożliwia, może nie tyle co samodzielne hostowanie. Co korzystanie z różnych aplikacji webowych, którch dewizą jest seflhosting. Póki co aplikacji jest nie wiele. Osobiście korzystam z 5 z czego 1 działa po części. Nie wczytywałem się w dokumentacje. Kto normalny ma na to czas, ale przypuszczam że sandstorm jest związana bardzo mocno z Dockerem, skąd ten wniosek ? Otóż, obok RocketChat mamy CMS MediaWiki, który raczej napisany jest oparty o PHP. Instalacja nie była trudna. Wystarczyło pobrać skrypt i go uruchomić instalator zapyta nas o dwa zajebiście ważne pytania. Adres e-mail, podać najlepiej skrzynkę do której mamy dostęp oraz o nazwę, jakiej będziemy używać, bowiem sandstorm.io udostępnia dla swoich użytkowników domenę sandcats.io. Dostęp do sandstorm uzyskujemy z <nasza_nazwa>.sandcats.io. Wrazie przenosin, to ściagamy backupy i robimy recovery domeny własnie po przez adres e-mail, który podaliśmy przy instalacji. W korzystaniue z sandstrorm Problemem okazuje się dostęp do niego z sieci lan do której wpięty jest serwer, bo tak naprawdę nie jest on możliwy. Na github'ie  projektu, ktoś w problemach zadał pytanie o dostęp z sieci LAN i chyba napisali mu jak ma skonfigurować sandstorm. Jedną z hipotetycznych opcji jest przepuszczenie ruchu na firewallu z LAN przez WAN z powrotem do LAN - do serwera. Jednak nie wiem czy jest to wykonalne. Mała ilość aplikacji, ale to bardzo mały minus. Jedyną właśnie wadą jest brak natywnego dostępu do sandstorma z tej samej sieci, w której znajduje się serwer. No chyba że kolejnym minusem jest ledwo działająca aplikacja do chmury plikowej. Figurująca pod nazwą "DAVROS". W sumie są dwa błedy (tyle znalazłem więcej nie szukałem, nie potrzebuje) ale wykluczają one tą aplikację z użycia, pliki wrzuca się przez Drag&Drop. TYLKO! Gdzie jest przycisk Upload, ale po jego naciśnieciu zero reakcji, nie można wrzucić żadnego pliku do żadnego z podfolderów. Poprostu nic się nie dzieje. Zero plików, zero błedów, zero odzewu. Gdzieś obiła mi się o oczy informacja że to może być wina przeglądarki, że na chromium wszystko działa. Nie, jednak nie działa. Na chromium jeśli zerkniemy do konsoli, to jest błąd odnośnie jakiejś funkcji. Właśnie logowanie... Logowanie do sandstorm, może odbywać się na kilka róznych sposobów. Ja osobiście polecam, logowanie przez Google. Najprostsze w konfiguracji. Jedyne czego wymaga to wygenerowanie na Google Cloud Platform klucza OAuth. Co jeśli chcemy, np. żeby nasza aplikacja była dostępna z zewnątrz ? To niestety musimy liczyć prawdopodbnie na wsparcie twórców samej aplikacji i ich świadomość o tym że być wykorzystywana przez sandstorm.io. Z własnego doświadczenia wiem że z aplikacji które ja mam zainstalowane tj. MediaWiki, DAVROS, Ghost, Wekan, EtherPad oraz Gogs, to wprosty sposób możemy dopuścić Ghost'a, za pomocą odpowiedniej konfiguracji domeny, Gogs również umożliwia korzystanie z shell'owego Git'a, za pomocą kluczy dostępu. Każdej aplikacji możemy ściagnąć backup, jednak nie wydaje mi się aby był on zadatny do korzystania po za sandstorm'em. Dostęp do konkretnych aplikacji bez logowania jest możliwy dzięki opcji "Share access" gdzie wybieramy sobie oprawnienia, niestety nie wszystkie aplikacje dają możliwość zdefiniowania uprawnień, np. Ghost, jeśli prześlemy komuś "Shareable link", to uzyskan on nasze uprawnienia. Z kolei MediaWiki daje po wygenerowaniu, linku i po kilknieciu w "See who has access", daje możliwośc ustawienia co osoba, która w chodzi przez ten link może zrobić, a zakres jest nie wielki. Moze "can only view articles" albo "can administer wiki". Grains. Czym są grains, w ujęcie sandstorm. To nic innego jak instancje, każda aplikacja może mieć wiele instancji, nie wiem nie sprawdzałem. Bo po jedenej z każdej interesującej mnie aplikacji wystarczy.
Póki co jestem zadowolony, nie wiem czy jest sens się wysilać i wynajdywać koło na nowo. Jak i tak nasza aplikacja będzie daleko w tyle... Szkoda czasu. Taka rada na koniec. Jeśli tych aplikacji zrobi się dużo, to warto pomyśleć na nad jakimś dashboardem, albo stroną domową z jakimś ładnym przedstawieniem odnośników do tych aplikacji, z tego co można znaleźć na Google. To polecem Grafanę. Nie służy ona może do stricte takich rzeczy ale zawiera format ogólny panelu oa nazwie "Text". gdzie za pomocą HTML, możemy sobie zdefiniować bardzo ładne kafelki, które będą prowadzić do naszej aplikacji.
Nie wspomniałem tu o jednej ważnej aplikacji, ale to temat na inny artykuł.
Jeśli ktoś lubi programować to wiecie czego brakuje? Czegoś na podobę proxmox, ale bez instalacji specjalnej dystrybcji tylko żeby była to aplikacji do zainstalowania na każdej możliwej. A po za tym jeśli ktoś szuka alternatywy dla VMware vSphere, to polecam PROXMOX wersja Community robi robotę, tylko można się troszeczkę pogubić w konfiguracji dysków. Zrobię o tym osobny artykuł, z instalacją PROXMOX i jego konfiguracją. Połącznie KVM + LXC, po prostu poezja.
Niestety jeśli chodzi o #MOPOTI to zawsze zostawiam te wpisy na jakiś czas, żebym ewntualnie go uzupełenił, przeczytał jeszcze raz, poprawił błędy. Nie sądziłem że będę musiał wprowadzić tak drastatyczne zmiany. Oczywiście zamias usuwać gigantyczną część tekstu tego wpisu to zostawie, go jako jedyne prawilne omówienie tego tematu na tym blogu. Pojawi się również odnośnie tego poradnik jak sobie to zainstalować. Otóż chodzi o sandstorm.io. Z racji tego że musiałem zmienić miejsce hostowania, wyłączyłem sandstorm. Zrezygnowałem z niego na rzecz bardziej elastycznych kontenerów (LXC/LXD). Teraz mogę postawić aplikację jaka tylko chcę. Mogę kontrolować znacznie więcej rzeczy. Mam dostęp do najświeżych wersji aplikacji. Nawet to. Ten blog, zupełnie różni się od tego co dostajemy na sandstorm, a nie mówię tu już o kluczach dostępu do Git (gogs). Pamiętam jak nie mogłem zrobić push, dostawałem jakiś błąd odnośnie tokena. Przewinąłem strone gogs'a dwa razy żeby upewnić się czy czegoś nie pominąłem, z restartowałem aplikacje dostałem nowy klucz i push poszedł. Dlaczego nie poszed za pierwszym razem, tego nie wiem. Wygodny dostęp z poziomu internetu do strony, normalnej strony nie do iframe z sandstorm, podpięcie własnej domeny te rzeczy są kluczowe dla selfhostingu. Oczywiście jest bardzie pracochłonne niż postawienie sandstorm, np. pamiętam moje rozdarżnienie kiedy instalowałem etherpad, ale dzięki temu że sam to instalowałem, mogę pisać literę 'ć' wyłączyłem ten skrót w pliku konfiguracyjny. 
W selfhosted nie chodzi aby było lekko i przyjemnie chodziaż wiele rzeczy się tak instaluje, pracujemy na swoje własne konta i musimy mieć po co pracować. Konfigurować te wszystkie rzeczy, pilnować terminów certyfikatów SSL, kiedy oczywiście odnawiamy je ręcznie. Jeśli wszysko było by łatwe i przyjemne, to już dawno nie mielibyśmy co robić.
Pozdro xf0r3m.
